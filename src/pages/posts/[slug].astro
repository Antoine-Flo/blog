---
import type { GetStaticPaths } from 'astro'
import Layout from '@layouts/Layout.astro'
import { dateString, getSortedPosts, url } from '@utils'
import Pagination from '@components/Pagination.astro'

export const getStaticPaths = (async () => {
  const posts = await getSortedPosts()
  return posts.map((post, index) => {
    const validPrev = index > 0
    const validNext = index < posts.length - 1
    const prev = validPrev ? posts[index - 1] : undefined
    const next = validNext ? posts[index + 1] : undefined
    return {
      params: { slug: post.id },
      props: { post, prev, next },
    }
  })
}) satisfies GetStaticPaths

const { post, prev, next } = Astro.props
const postData = post.data
---

<Layout>
  <article class="max-w-full py-7.5">
    <h1
      class:list={[
        'relative text-xl text-accent mb-3 pb-4 border-b-3 border-dotted border-accent font-bold',
        'after:absolute after:bottom-0.5 after:block after:content-normal after:w-full after:border-b-accent after:border-b-3 after:border-dotted',
      ]}
    >
      {postData.title}
    </h1>
    <div class="text-foreground/80 mb-2.5">
      <time>{dateString(postData.published)}</time>
      {
        postData.author && (
          <span class="before:content-['::'] before:inline-block before:mx-0.5">
            {postData.author}
          </span>
        )
      }
    </div>
    {
      postData.tags && (
        <div class="text-accent mb-5">
          {postData.tags.map((tag) => (
            <a class="underline mr-4 inline-block" href={`/tags/${tag}`}>
              #{tag}
            </a>
          ))}
        </div>
      )
    }
    <div class="my-5 prose" set:html={post.rendered?.html} />
  </article>
  <Pagination
    prevLink={prev ? url('posts', prev.id) : undefined}
    prevText="Previous Post"
    nextLink={next ? url('posts', next.id) : undefined}
    nextText="Next Post"
  />
</Layout>
