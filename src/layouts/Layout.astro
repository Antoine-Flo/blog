---
import '/src/styles/global.css'
import Header from '@components/Header.astro'
import Footer from '@components/Footer.astro'
import { loadShikiTheme } from 'astro-expressive-code'
import siteConfig from '../site.config'
import { resolveElementStyles } from '@utils'

interface Props {
  title?: string
}

const { title } = Astro.props
const pageTitle = title ? `${title} - ${siteConfig.title}` : siteConfig.title
const theme = await loadShikiTheme(siteConfig.theme.name)
const elementStyles = {
  foreground: ['editor.foreground'],
  background: ['editor.background'],
  accent: [
    'heading.1.markdown entity.name',
    'heading.1.markdown',
    'markup.heading',
    'editor.foreground',
  ],
  anchor: [
    'punctuation.definition.heading.markdown',
    'heading.1.markdown punctuation.definition.heading.markdown',
    'heading.1.markdown entity.name',
    'heading.1.markdown',
    'markup.heading',
    'editor.foreground',
  ],
  h1: [
    'heading.1.markdown entity.name',
    'heading.1.markdown',
    'markup.heading',
    'editor.foreground',
  ],
  h2: [
    'heading.2.markdown entity.name',
    'heading.2.markdown',
    'markup.heading',
    'editor.foreground',
  ],
  h3: [
    'heading.3.markdown entity.name',
    'heading.3.markdown',
    'markup.heading',
    'editor.foreground',
  ],
  h4: [
    'heading.4.markdown entity.name',
    'heading.4.markdown',
    'markup.heading',
    'editor.foreground',
  ],
  h5: [
    'heading.5.markdown entity.name',
    'heading.5.markdown',
    'markup.heading',
    'editor.foreground',
  ],
  h6: [
    'heading.6.markdown entity.name',
    'heading.6.markdown',
    'markup.heading',
    'editor.foreground',
  ],
  'li-marker': [
    'punctuation.definition.list.begin.markdown',
    'heading.1.markdown entity.name',
    'heading.1.markdown',
    'markup.heading',
    'editor.foreground',
  ],
  hr: ['meta.separator.markdown'],
  italic: ['punctuation.definition.italic.markdown'],
  bold: [],
  a: ['string.other.link.title.markdown'],
}
const cssVars: { [key: string]: string } = {
  'theme-font': siteConfig.theme.font,
  'ec-frm-frameBoxShdCssVal': 'none',
  'ec-brdRad': '0',
  'ec-frm-edTabBrdRad': '0',
}
Object.entries(resolveElementStyles(elementStyles, theme)).forEach(([key, value]) => {
  cssVars[`theme-${key}`] = value
})
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <title>{pageTitle}</title>
  </head>
  <body class="w-full h-full m-0 bg-background text-foreground">
    <div
      class="flex flex-col max-w-[812px] min-h-screen border-x border-accent/10 m-auto p-5 md:p-10"
    >
      <Header />
      <div class="flex flex-col">
        <slot />
      </div>
      <Footer />
    </div>
  </body>
</html>

<style is:global define:vars={cssVars}></style>
